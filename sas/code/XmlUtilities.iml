/*
 * Java Statistics.  A java library providing power/sample size estimation for 
 * the general linear model.
 * 
 * Copyright (C) 2010 Regents of the University of Colorado.  
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */

/*
* IML module containing XML utility functions
*
*/


/*
* Private function to map the test name to the
* corresponding power column in the holdpower
* results matrix
*/
START _getPowerColumns(testlist, univariate);	
	if univariate=1 then do;
	  TESTCOLUMNS = J(1,NCOL(testlist),5);
	end;
	else do;
	print testlist;
	  *testcolumns = {};
	  print "hi";
	  do i=1 to NCOL(testlist);
	    if testlist[i] = "unirep" then TESTCOLUMNS = TESTCOLUMNS || {10};
	    else if testlist[i] = "unirep" then TESTCOLUMNS = TESTCOLUMNS || {10};
	    else if testlist[i] = "unirepBox" then TESTCOLUMNS = TESTCOLUMNS || {18};
	    else if testlist[i] = "unirepGG" then TESTCOLUMNS = TESTCOLUMNS || {16};
	    else if testlist[i] = "unirepHF" then TESTCOLUMNS = TESTCOLUMNS || {13};
	    else if testlist[i] = "wl" then TESTCOLUMNS = TESTCOLUMNS || {7};
	    else if testlist[i] = "pbt" then TESTCOLUMNS = TESTCOLUMNS || {6};
	    else if testlist[i] = "hlt" then TESTCOLUMNS = TESTCOLUMNS || {5};
	  end;
	end;
	return(TESTCOLUMNS);

FINISH _getPowerColumns;

/*
* Function to write results from powerlib to
* and XML file.  Works with POWERLIB 2.1
*
* ARGUMENTS:
*  out - filename reference for output file 
*		 (user must call "filename ..." command externally)
*  holdpower - matrix of power results
*  testlist - list of tests to include in the power results
*         (for univariate results, the same power will be repeated)
*  univariate - 1 = univariate results, 0 = multivariate
*
* RETURNS: none
*/
START powerResultsToXML(out, holdpower, testlist, univariate);
  TESTCOLUMNS = _getPowerColumns(testlist, univariate);
  file out;
	put "<powerList>";
	do t=1 to NCOL(TESTLIST);
		do i=1 to NROW(HOLDPOWER);
			POWERCOL = TESTCOLUMNS[t];
			put "<glmmPower test='" @;
			put (TESTLIST[t]) @;
			put "' alpha='" @;
			put (HOLDPOWER[i,1]) @;
			put "' nominalPower='" @;
			put (HOLDPOWER[i,POWERCOL]) best17. @;
			put "' actualPower='" @;
			put (HOLDPOWER[i,POWERCOL]) best17. @;
			put "' betaScale='" @;
			put (HOLDPOWER[i,3]) @;
			put "' sigmaScale='" @;
			put (HOLDPOWER[i,2]) @;
			put "' sampleSize='" @;
			put (HOLDPOWER[i,4]) @;
			put "' powerMethod='conditional' />";
        end;
	end;
	put "</powerList>";
	closefile out;

FINISH powerResultsToXML;
